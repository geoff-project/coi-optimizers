# SPDX-FileCopyrightText: 2020 - 2025 CERN
# SPDX-FileCopyrightText: 2023 - 2025 GSI Helmholtzzentrum für Schwerionenforschung
# SPDX-FileNotice: All rights not expressly granted are reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later OR EUPL-1.2+

[build-system]
requires = [
    'pip >= 22',
    'setuptools >= 45',
    'setuptools-scm[toml] ~= 8.0',
    'wheel',
]
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']
name = 'cernml-coi-optimizers'
authors = [
    {name = 'Penny Madysa', email = 'penny.madysa@cern.ch'},
]
description = 'Uniform interfaces to single-objective optimization algorithms'
readme = 'README.md'
license = {file='COPYING'}
requires-python = '>=3.9'
dependencies = [
    'cernml-coi >= 0.9.3',
    'numpy >= 1.22',
    'importlib-metadata >= 4.8.0; python_version<"3.10"',
    'typing-extensions >= 4.3.0; python_version<"3.11"',
]
classifiers = [
    'Development Status :: 5 - Stable',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Physics',
    'Typing :: Typed',
]

[project.urls]
gitlab = 'https://gitlab.cern.ch/geoff/cerml-coi-optimizers'

[project.optional-dependencies]
bobyqa = ['Py-BOBYQA ~= 1.2']
cernml-es = ['cernml-extremum-seeking >= 3.0, < 5']
scipy = ['scipy >= 1.1']
skopt = ['scikit-optimize ~= 0.9.0']
all = ['cernml-coi-optimizers[bobyqa,cernml-es,scipy,skopt]']
examples = [
    'cernml-coi-optimizers[all]',
    'gymnasium < 2',
    'click >= 8.0',
]
test = [
    'cernml-coi-optimizers[all]',
    'gym',
    'gymnasium',
    'pytest',
    'pytest-cov',
    'sphinx',
    'types-docutils',
]
doc = [
    'cernml-coi-optimizers[all]',
    'sphinx',
    'python-docs-theme',
    'sphinx-inline-tabs',
]

[project.entry-points.'cernml.optimizers']
BOBYQA = 'cernml.optimizers.bobyqa:Bobyqa'
COBYLA = 'cernml.optimizers.scipy:Cobyla'
Powell = 'cernml.optimizers.scipy:Powell'
NelderMeadSimplex = 'cernml.optimizers.scipy:NelderMeadSimplex'
SkoptBayesian = 'cernml.optimizers.skopt:SkoptBayesian'
ExtremumSeeking = 'cernml.optimizers.extremum_seeking:ExtremumSeeking'

[tool.setuptools]
zip-safe = true
package-data = {'*' = ['py.typed']}

[tool.setuptools_scm]

[tool.black]
target-version = ['py39']

[tool.isort]
profile = 'black'
known_first_party = ['cernml']

[tool.ruff]
fix = true
src = ['examples', 'src', 'test']
target-version = 'py39'

[tool.ruff.lint]
# Missing warnings:
# D* not raised in _*.py: https://github.com/astral-sh/ruff/issues/9561
extend-select = [
    'A', 'ARG', 'ASYNC', 'B', 'C4', 'C90', 'COM818', 'D', 'DTZ', 'EXE', 'FLY',
    'I', 'ICN', 'ISC', 'NPY', 'PD', 'PERF', 'PGH', 'PIE', 'PLR5501', 'PT',
    'PTH', 'PYI', 'RET', 'RSE', 'RUF', 'SIM', 'SLOT', 'T10', 'TD003', 'TRY',
    'UP',
]
ignore = [
    'D105',   # Missing docstring in magic method
    'D107',   # Missing docstring in __init__
    'D417',   # Missing argument description in the docstring
    'ISC001', # Implicit string concatenation, conflicts with autoformat
    'RUF012', # Mutable class attributes should use `typing.ClassVar`
              # TODO Waiting for Gymnasium#951 to get fixed.
    'TRY003', # Avoid specifying long messages outside the exception class
]
# Allow non-breaking space and en-dash in docstrings.
allowed-confusables = [' ', '–', '×']
flake8-pytest-style.fixture-parentheses = false
isort.split-on-trailing-comma = true
pycodestyle.max-doc-length = 72
pydocstyle.convention = 'google'
pydocstyle.ignore-decorators = ['overload', 'overrides']

[tool.ruff.lint.per-file-ignores]
'**/{tests,docs}/*' = ['A001', 'ARG', 'D', 'INP']

[tool.pytest.ini_options]
addopts = '--doctest-modules --doctest-glob="*.rst" --ignore=docs/conf.py'
testpaths = ['src', 'tests', 'docs']
doctest_optionflags = ['ELLIPSIS', 'IGNORE_EXCEPTION_DETAIL']
markers = [
    'optimizer: name of the algorithm to use by the `optimizer` fixture',
]

[tool.coverage.run]
source = ['src/']
branch = true

[tool.coverage.report]
exclude_also = [
    '^\s*@(t\w*\.)?overload$',
    '^\s*except ImportError:$',
    '^\s*from .* import',
    '^\s*if .*\.TYPE_CHECKING:$',
    '^\s*if sys\.version_info ..? \(\d, \d+\):$',
    '^\s*import ',
    '^\s*raise NotImplementedError',
]

[tool.pylint]
main.ignore-paths = ['docs']
main.ignore-patterns = ['.*\.pyi$', 'test_.*\.py$']
format.ignore-long-lines = '<?https?://\S+>?$'
'messages control'.disable = ['all']
'messages control'.enable = [
    'F',
    'bad-inline-option',
    'cell-var-from-loop',
    'missing-class-docstring',
    'missing-function-docstring',
    'missing-module-docstring',
    'singledispatch-method',
    'singledispatchmethod-function',
    'super-init-not-called',
    'typevar-double-variance',
    'typevar-name-incorrect-variance',
    'typevar-name-mismatch',
    'unrecognized-inline-option',
    'unrecognized-option',
]

[tool.mypy]
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = '$MYPY_CONFIG_FILE_DIR/src'

[[tool.mypy.overrides]]
module = [
    'gym.*',
    'pybobyqa.*',
    'scipy.*',
    'skopt.*',
]
ignore_missing_imports = true
