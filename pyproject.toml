# SPDX-FileCopyrightText: 2023 GSI Helmholtzzentrum fÃ¼r Schwerionenforschung
# SPDX-FileNotice: All rights not expressly granted are reserved.
#
# SPDX-License-Identifier: GPL-3.0-or-later OR EUPL-1.2+

[build-system]
requires = [
    'pip >= 22',
    'setuptools >= 45',
    'setuptools-scm[toml] ~= 7.0',
    'wheel',
]
build-backend = 'setuptools.build_meta'

[project]
dynamic = ['version']
name = 'cernml-coi-optimizers'
authors = [
    {name = 'Nico Madysa', email = 'nico.madysa@cern.ch'},
]
description = 'Uniform interfaces to single-objective optimization algorithms'
readme = 'README.md'
license = {file='COPYING'}
dependencies = [
    'cernml-coi ~=0.8.13',
    'importlib-metadata; python_version<"3.10"',
    'typing-extensions; python_version<"3.11"',
]
classifiers = [
    'Development Status :: 5 - Stable',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Physics',
    'Typing :: Typed',
]

[project.urls]
gitlab = 'https://gitlab.cern.ch/geoff/cerml-coi-optimizers'

[project.optional-dependencies]
bobyqa = ['Py-BOBYQA ~= 1.2']
cernml-es = ['cernml-extremum-seeking ~= 3.0']
scipy = ['scipy ~= 1.1']
skopt = ['scikit-optimize ~= 0.9.0']
all = ['cernml-coi-optimizers[bobyqa,cernml-es,scipy,skopt]']
examples = [
    'cernml-coi-optimizers[all]',
    'gymnasium < 2',
    'click ~= 8.0',
]
test = [
    'cernml-coi-optimizers[all]',
    'gym',
    'gymnasium',
    'pytest',
    'pytest-cov',
    'sphinx',
    'types-docutils',
]
doc = [
    'cernml-coi-optimizers[all]',
    'sphinx',
    'sphinx-inline-tabs',
]

[project.entry-points.'cernml.optimizers']
BOBYQA = 'cernml.optimizers.bobyqa:Bobyqa'
COBYLA = 'cernml.optimizers.scipy:Cobyla'
Powell = 'cernml.optimizers.scipy:Powell'
NelderMeadSimplex = 'cernml.optimizers.scipy:NelderMeadSimplex'
SkoptBayesian = 'cernml.optimizers.skopt:SkoptBayesian'
ExtremumSeeking = 'cernml.optimizers.extremum_seeking:ExtremumSeeking'

[tool.setuptools]
zip-safe = true
package-data = {'*' = ['py.typed']}

[tool.setuptools_scm]

[tool.black]
target-version = ['py39']

[tool.isort]
profile = 'black'
known_first_party = ['cernml']

[tool.pytest.ini_options]
addopts = '--doctest-modules --doctest-glob="*.rst" --ignore=docs/conf.py'
testpaths = ['src', 'tests', 'docs']
doctest_optionflags = ['ELLIPSIS', 'IGNORE_EXCEPTION_DETAIL']

[tool.coverage.run]
source = ['src/']
branch = true

[tool.coverage.report]
exclude_also = [
    '^\s*from .* import',
    '^\s*import ',
    'if \w*\.TYPE_CHECKING',
    '^\s*\.\.\.$',
    'raise NotImplementedError',
    '^\s*@(t\w*\.)?overload$',
]

[tool.pylint.main]
ignore-patterns = ['.*\.pyi$', 'test_.*\.py$']

[tool.pylint.format]
ignore-long-lines = '<?https?://\S+>?$'

[tool.pylint.'messages control']
disable = [
    'fixme',
    'similarities',
    'too-many-arguments',
]

[tool.mypy]
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = '$MYPY_CONFIG_FILE_DIR/src'

[[tool.mypy.overrides]]
module = [
    'numpy.*',
    'pybobyqa.*',
    'scipy.*',
    'skopt.*',
]
ignore_missing_imports = true
